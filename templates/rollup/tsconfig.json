{
  "compilerOptions": {
    /* Basic Options */
    "target": "es5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "ES2015",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    "sourceMap": true,                     /* Generates corresponding '.map' file. */
    "allowJs": true,                       /* Allow javascript files to be compiled. */
    "outDir": "./dist",                        /* Redirect output structure to the directory. */
//    "outFile": "./dist/dom-render33.js",                        /* Redirect output structure to the directory. */
    "rootDir": "./src",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "src",                       /* Base directory to resolve non-absolute module names. */
    "typeRoots": ["@type", "node_modules/@types", "node_modules/handlebars", "node_modules/reflect-metadata", "node_modules/rxjs","@types"],                       /* List of folders to include type definitions from. */
    "types": ["node", "jest"],                     /* Type declaration files to be included in compilation. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    /* Experimental Options */
    "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    /* Advanced Options */
    "forceConsistentCasingInFileNames": true,
    "removeComments": true,
//    "noImplicitAny": true,
//    "plugins": [{ "name": "sample-ts-plugin" }],
    /* Disallow inconsistently-cased references to the same file. */
    "lib": [
      "dom",
      "es5",
      "es2015",
      "es2019",
      "scripthost",
      "es2015.proxy",
      "es2015.collection"
    ]
  },
  "exclude": [
    "bin",
    "example",
    "examples",
    "rollup.config.js",
    "test",
    "cli",
    "assets",
    "test-cli",
    "**/*.test.ts",
    "templates",
    "dist"
  ]
}
