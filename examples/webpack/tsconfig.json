{
  "compilerOptions": {
    /* Basic Options */
    "target": "es5" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "sourceMap": true,                     /* Generates corresponding '.map' file. */
    
    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
   
    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "baseUrl": "src" /* Base directory to resolve non-absolute module names. */,
    "paths": {
      "@src/*": ["../src/*"]
    }, /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    "typeRoots": ["node_modules/@types"] /* List of folders to include type definitions from. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    
    "types": ["node"],

    /* Experimental Options */
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,

    /* Advanced Options */
    "forceConsistentCasingInFileNames": true,
    /* Disallow inconsistently-cased references to the same file. */
    "lib": ["dom", "es5", "scripthost", "es2015.proxy"]
  }
}
